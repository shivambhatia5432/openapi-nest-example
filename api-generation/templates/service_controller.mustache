// prettier-ignore
import { Controller, Get, Post, Patch, Delete, Body, Put, Inject, Param, Headers, Query } from '@nestjs/common';
import {AuthGuard} from 'src/guards/auth.guard';
import {ReqUser} from 'src/decorator/requser.decorator';
import { {{classname}}Switch } from './{{classFilename}}.api-switch';

{{#imports}}
import { {{classname}} } from '../{{filename}}';
{{/imports}}

// prettier-ignore
{{#operations}}
@UseGuards(AppVersionGuard, AuthGuard)
@UseInterceptors(SentryInterceptor)
@Controller()
export class {{classname}}Controller {
    constructor(@Inject('{{classname}}Switch') private readonly apiSwitch: {{classname}}Switch) {}
{{#operation}}
    @{{#lambda.titlecase}}{{httpMethod}}{{/lambda.titlecase}}("{{path}}")
    {{operationId}}({{#vendorExtensions.x-slash-request-user}}
        @ReqUser() currentUser: User,{{/vendorExtensions.x-slash-request-user}}{{#allParams}}
        {{#isBodyParam}}@Body() {{/isBodyParam}}{{#isPathParam}}@Param('{{paramName}}') {{/isPathParam}}{{#isHeaderParam}}@Headers('{{#lambda.lowercase}}{{baseName}}{{/lambda.lowercase}}') {{/isHeaderParam}}{{#isQueryParam}}@Query('{{baseName}}') {{/isQueryParam}}{{paramName}}: {{{dataType}}},{{/allParams}}
    ): {{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}void{{/returnType}} {
        {{#returnType}}return {{/returnType}}this.apiSwitch.{{operationId}}({{#allParams}}{{paramName}}{{^-last}},{{/-last}}{{/allParams}});
    }

{{/operation}}
}
{{/operations}}
